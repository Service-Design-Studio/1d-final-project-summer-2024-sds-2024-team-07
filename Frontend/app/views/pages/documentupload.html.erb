<div class="custom-container">
  <div class="left-div">
    <%= render 'shared/left_toggle-sidebar' %>
  </div>
  <div class="right-div">
    <%= render 'shared/right_header' %>
    <div class="btn-group">
      <button type="button" onclick="changeDiv(1)" id="button1" class="btn btn-outline-danger">Salaried Employee :<br> More than 3 Months</button>
      <button type="button" onclick="changeDiv(2)" id="button2" class="btn btn-outline-danger">Salaried Employee :<br> Less than 3 months</button>
      <button type="button" onclick="changeDiv(3)" id="button3" class="btn btn-outline-danger">Self-Employed/Commission-Based</button>
    </div>

    <div class="tabs">
      <input type="radio" id="tab1" name="tab-control" checked>
      <input type="radio" id="tab2" name="tab-control">
      <input type="radio" id="tab3" name="tab-control">
      <input type="radio" id="tab4" name="tab-control">
      <input type="radio" id="tab5" name="tab-control">
      <ul>
        <li title="Valid Passport">
          <label id="label1" for="tab1" role="button">
            <div class="icon">üìï</div>
            <br><span>Passport</span>
          </label>
        </li>
        <li title="Employment Pass">
          <label id="label2" for="tab2" role="button">
            <div class="icon">üìù</div>
            <br><span>Employment Pass</span>
          </label>
        </li>
        <li id="item-tab3" title="Income Tax">
          <label id="label3" for="tab3" role="button">
            <div class="icon">üíµ</div>
            <br><span>Income Tax</span>
          </label>
        </li>
        <li id="item-tab4" title="PaySlip">
          <label id="label4" for="tab4" role="button">
            <div class="icon">üíº</div>
            <br><span>Pay Slip</span>
          </label>
        </li>
        <li title="Proof of SG Address">
          <label id="label5" for="tab5" role="button">
            <div class="icon">üè†</div>
            <br><span>Proof of Address</span>
          </label>
        </li>
      </ul>
      <div class="content">
        <section id="content1">
          <%= image_tag 'Passport.jpg', alt: "Passport", class: 'content-image' %>
        </section>
        <section id="content2">
          <%= image_tag 'WorkPass.jpg', alt: "Employment Pass", class: 'content-image' %>
        </section>
        <section id="content3">
          <%= image_tag 'TaxAsessment.jpg', alt: "Income Tax", class: 'content-image' %>
        </section>
        <section id="content4">
          <%= image_tag 'IncomeSlip.jpg', alt: "Pay Slip", class: 'content-image' %>
        </section>
        <section id="content5">
          <%= image_tag 'poa.jpg', alt: "Proof of Address", class: 'content-image' %>
        </section>
      </div>

      <div class="upload-btn-wrapper">
        <form id="uploadForm" enctype="multipart/form-data">
          <input type="file" id="fileInput" name="file" style="display:none;" />
          <%= link_to '#', class: 'btnUp', id: 'uploadButton1' do %>
            Upload Document
          <% end %>
        </form>
      </div>
      <div id="uploadStatus"></div>


      <div style="text-align: right; margin-top: 80px;">
        <%= link_to 'Next', pages_applicationform_path, style: 'display: inline-block; padding: 10px 20px; font-size: 16px; text-decoration: none; background-color: red; color: white; border-radius: 5px;' %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const tabsContainer = document.querySelector(".tabs");
    const tabs = tabsContainer.querySelectorAll("input[type='radio']");
    const labels = tabsContainer.querySelectorAll("label");
    const indicator = tabsContainer.querySelector(".indicator");

    function updateIndicator() {
        const activeTab = Array.from(tabs).find(tab => tab.checked);
        if (activeTab) {
            const label = tabsContainer.querySelector(`label[for="${activeTab.id}"]`);
            const labelRect = label.getBoundingClientRect();
            const containerRect = tabsContainer.getBoundingClientRect();
            indicator.style.width = `${labelRect.width}px`;
            indicator.style.transform = `translateX(${labelRect.left - containerRect.left}px)`;
        }
    }

    tabs.forEach(tab => {
        tab.addEventListener("change", updateIndicator);
    });

    function resetTabs() {
        labels.forEach(label => {
            label.parentElement.style.display = 'none';
            label.control.disabled = true;
        });
        document.getElementById('item-tab3').style.display = 'block';  // Show Income Tax by default
        document.getElementById('item-tab4').style.display = 'block';  // Show Pay Slip by default
    }

    function restoreTabs(tabIds) {
        tabIds.forEach(id => {
            const tab = document.getElementById(id);
            const label = document.querySelector(`label[for='${id}']`);
            tab.disabled = false;
            label.parentElement.style.display = 'block';
        });
    }

    function showTabGroup(groupNumber) {
        resetTabs();
        var buttons = document.querySelectorAll('.btn-group .btn');
        buttons.forEach(function(button) {
            button.classList.remove('active');
        });

        // Add the 'active' class to the clicked button
        var clickedButton = document.getElementById('button' + groupNumber);
        clickedButton.classList.add('active');

        if (groupNumber === 1) {
            restoreTabs(['tab1', 'tab2', 'tab3', 'tab4', 'tab5']);
        } else if (groupNumber === 2) {
            restoreTabs(['tab1', 'tab2', 'tab4', 'tab5']);
            document.getElementById('item-tab3').style.display = 'none';
        } else if (groupNumber === 3) {
            restoreTabs(['tab1', 'tab2', 'tab3', 'tab5']);
            document.getElementById('item-tab4').style.display = 'none';
        }

        updateIndicator();
    }

    document.getElementById('button1').addEventListener('click', () => showTabGroup(1));
    document.getElementById('button2').addEventListener('click', () => showTabGroup(2));
    document.getElementById('button3').addEventListener('click', () => showTabGroup(3));

    function changeDiv(groupNumber) {
        const hasUploadedFiles = Object.values(divUploadedFiles[currentDiv]).some(file => file !== null);

        if (currentDiv !== groupNumber) {
            if (hasUploadedFiles && !confirm("Do you wish to change your employment type? Your changes will be discarded.")) {
                return;
            }
            resetCurrentDivUploads();

            // Update active button style
            document.querySelectorAll('.btn-group .btn').forEach(button => {
                button.classList.remove('active');
            });
            document.getElementById('button' + groupNumber).classList.add('active');

            currentDiv = groupNumber;
            document.getElementById('tab1').checked = true; // Reset to the first tab by default
            showTabGroup(groupNumber);
        }
    }

    function resetCurrentDivUploads() {
        Object.keys(divUploadedFiles[currentDiv]).forEach(tabId => {
            divUploadedFiles[currentDiv][tabId] = null;
        });
        updateUploadButtons();
    }

    let currentDiv = 1;
    let divUploadedFiles = {
        1: { tab1: null, tab2: null, tab3: null, tab4: null, tab5: null },
        2: { tab1: null, tab2: null, tab3: null, tab4: null, tab5: null },
        3: { tab1: null, tab2: null, tab3: null, tab4: null, tab5: null }
    };

    updateUploadButtons(); // Initialize the upload buttons
    showTabGroup(1); // Initialize the first group of tabs
});
</script>

<script>
  document.addEventListener("DOMContentLoaded", function() {
  const uploadButton = document.getElementById("uploadButton1");
  const fileInput = document.getElementById("fileInput");
  const uploadStatus = document.getElementById("uploadStatus");

  uploadButton.addEventListener("click", function(event) {
    event.preventDefault();
    console.log("Upload button clicked");
    fileInput.click();
  });

  fileInput.addEventListener("change", function() {
    const file = fileInput.files[0];
    if (file) {
      console.log("File selected:", file.name);
      const formData = new FormData();
      formData.append('file', file);

      const xhr = new XMLHttpRequest();
      xhr.open("POST", "http://127.0.0.1:5000/analyze", true);

      xhr.onreadystatechange = function() {
        if (xhr.readyState === XMLHttpRequest.DONE) {
          const status = xhr.status;
          console.log("Response status:", status);
          if (status === 200) {
            const response = JSON.parse(xhr.responseText);
            console.log("Response:", response);
            if (response.result === 'true') {
              uploadStatus.innerHTML = '<p>Document uploaded and analyzed successfully!</p>';
            } else {
              uploadStatus.innerHTML = '<p>Wrong document uploaded. Please upload the correct file.</p>';
            }
          } else {
            uploadStatus.innerHTML = '<p>Failed to upload document. Please try again.</p>';
          }
        }
      };

      xhr.onerror = function() {
        console.error("Request failed");
        uploadStatus.innerHTML = '<p>Request failed.</p>';
      };

      console.log("Sending file to server...");
      xhr.send(formData);
    } else {
      console.log("No file selected");
    }
  });
});

</script>